# Astro site pipeline definition

trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

steps:
# --- Explicitly Checkout Self (Astro Repo) ---
  - checkout: self # Checkout the repo this yaml file is in
    path: s       # Checkout into the 's' subdirectory of $(Pipeline.Workspace)



# --- Astro Steps ---
  - task: NodeTool@0
    inputs:
      versionSpec: '22.x'
    displayName: 'Install Node.js for Astro'

  - script: |
      npm install
    displayName: 'Install Astro dependencies'
    workingDirectory: $(Pipeline.Workspace)/s # Default checkout path for self

  - bash: |
      echo "Determining Site URL based on branch: $(Build.SourceBranchName)"
      if [ "$(Build.SourceBranchName)" == "main" ]; then
        SITE_URL="https://jinglepay.com" # Production URL
      else
        SITE_URL="http://jinglepay-website-dev.s3-website.me-central-1.amazonaws.com" # Staging URL
      fi
      
      mkdir -p $(Pipeline.Workspace)/s/src
      
      echo "export const siteBaseUrl = '${SITE_URL}';" > $(Pipeline.Workspace)/s/src/siteConfig.js
      
      cat $(Pipeline.Workspace)/s/src/siteConfig.js
    displayName: 'Generate Astro src/siteConfig.js'
    workingDirectory: $(Pipeline.Workspace)/s

  - script: |
      npm run build
    displayName: 'Build Astro project'
    workingDirectory: $(Pipeline.Workspace)/s

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Pipeline.Workspace)/s/dist'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/astro-dist'
    displayName: 'Copy Astro build files'



# --- Publish Artifacts ---
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'websites-output'
    displayName: 'Publish build artifacts'

# --- Deploy Steps (DEV) ---
  - task: S3Upload@1
    condition: eq(variables['Build.SourceBranchName'], 'develop') # Condition based on Astro repo branch
    inputs:
      awsCredentials: 'AWS_DEV'
      regionName: 'me-central-1'
      bucketName: 'jinglepay-website-dev'
      sourceFolder: '$(Build.ArtifactStagingDirectory)/astro-dist'
      targetFolder: ''
      flattenFolders: false
    displayName: 'Deploy Astro to DEV S3 bucket (Root)'



# --- Deploy Steps (PROD) ---
  - task: S3Upload@1
    condition: eq(variables['Build.SourceBranchName'], 'main') # Condition based on Astro repo branch
    inputs:
      awsCredentials: 'AWS_PROD'
      regionName: 'me-central-1'
      bucketName: 'jinglepay-website'
      sourceFolder: '$(Build.ArtifactStagingDirectory)/astro-dist'
      targetFolder: ''
      flattenFolders: false
    displayName: 'Deploy Astro to PROD S3 bucket (Root)'


