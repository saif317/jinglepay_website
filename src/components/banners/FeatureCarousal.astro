---
import FeatureBanner, { type FeatureBannerProps } from './FeatureBanner.astro';
import PromoBanner, { type PromoBannerProps } from './PromoBanner.astro';
import { Image } from 'astro:assets';

import Shadow1 from '@assets/images/features/shadow1.svg';
import Shadow2 from '@assets/images/features/shadow2.svg';
import ShadowPromo from '@assets/images/promos/shadow-promo.svg';

import multipleAccountsImage from '@assets/images/features/accounts-feature.webp';
import transferImage from '@assets/images/features/transfer-feature.webp';
import walletPromoImage from '@assets/images/promos/wallet-promo.webp';

const { translations: { carousal = {} } } = Astro.locals;

const carouselItems: (FeatureBannerProps | PromoBannerProps)[] = [
  {
    titles: carousal.multipleAccounts,
    backgroundColor: 'bg-gradient-to-br from-teal-400 via-green-400 to-teal-400',
    textColor: '#000000',
    imageSrc: multipleAccountsImage,
    imageAlt: 'Multiple accounts feature illustration showing cards and app interface',
    type: 'feature',
    shadow: Shadow1,
  },
  {
    heading: carousal.earn,
    description:
      carousal.earnDescription,
    backgroundColor: 'bg-[radial-gradient(ellipse_at_center,_#8744D4_0%,_#6526AE_100%)]',
    textColor: '#FFFFFF',
    imageSrc: walletPromoImage,
    imageAlt: 'Smartphone showing JinglePay wallet interface with coins',
    type: 'promo',
    shadow: ShadowPromo,
  },
  {
    titles: carousal.payBills,
    subtitle: carousal.payBillsDescription,
    backgroundColor: 'bg-[radial-gradient(ellipse_at_center,_#31B3FB_0%,_#137EC5_100%)]',
    textColor: '#FFFFFF',
    imageSrc: transferImage,
    imageAlt: 'Illustration of fast money transfer with phone and icons',
    type: 'feature',
    shadow: Shadow2,
  },
];


carouselItems.push(...carouselItems);


const imageWidths = [240, 360, 480]; // Example widths
const imageSizes = '(max-width: 767px) 50vw, (max-width: 1023px) 40vw, 400px'; // Adjust sizes based on actual layout
---

<section id="static-carousel-preview" class='flex overflow-hidden relative flex-row gap-x-4 justify-center items-center w-full'>
  <div class="absolute scale-85 left-[-20%] sm:left-[-15%] xl:left-[-6%] md:left-[-20%] lg:left-[-12%] 2xl:left-[-5.5rem ] w-[26%] overflow-visible p-6 sm:p-8 md:p-10 rounded-xl md:rounded-2xl 4xl:rounded-3xl h-full bg-[radial-gradient(ellipse_at_center,_#31B3FB_0%,_#137EC5_100%)]">
    <div class="relative">
      <Image
        src={transferImage}
        alt=''
        widths={imageWidths}
        sizes={imageSizes}
        loading='eager'
        decoding='sync'
        quality="max"
        class='relative z-[1] object-contain w-auto h-48 sm:h-56 md:h-60 lg:h-64 3xl:h-72 4xl:h-80' 
        />
      <Shadow2 class='absolute bottom-[10px] right-[35px] 3xl:right-[55px] 4xl:right-[75px] max-w-[160px] md:max-w-[200px] lg:max-w-full'  />
    </div>
  </div>
  <div class="relative xl:w-[63%] 3xl:py-[4rem] lg:w-[74%] lg:py-[4rem] 2xl:py-10 p-6 w-[88%] md:w-[90%] sm:w-[77%] 2xl:w-[63%] overflow-visible sm:p-8 md:p-10 rounded-xl md:rounded-2xl 4xl:rounded-3xl bg-gradient-to-br from-teal-400 via-green-400 to-teal-400">
    <div class="container gap-y-[9rem] flex flex-col items-center justify-between h-full gap-4 mx-auto md:flex-row md:gap-8">
      <div class="flex-1 w-full text-center md:text-start md:w-auto"> 
        <h2 class="text-2xl sm:text-3xl lg:text-[2.5rem] 3xl:text-[3rem] 4xl:text-[3.5rem] font-black m-0 leading-tight text-left">{carousal.multipleAccounts[0]}</h2>
        <h2 class="text-2xl sm:text-3xl lg:text-[2.5rem] 3xl:text-[3rem] 4xl:text-[3.5rem] font-black m-0 leading-tight text-left">{carousal.multipleAccounts[1]}</h2>
        <h2 class="text-2xl sm:text-3xl lg:text-[2.5rem] 3xl:text-[3rem] 4xl:text-[3.5rem] font-black m-0 leading-tight text-left">{carousal.multipleAccounts[2]}</h2>
      </div>
      <div class="flex justify-center items-center mt-4 w-full md:justify-end md:w-auto md:mt-0">
        <div class="relative">
          <Image
            src={multipleAccountsImage}
            alt=''
            widths={imageWidths}
            sizes={imageSizes}
            loading='eager'
            decoding='sync'
            quality="max"
            class='relative z-[1] object-contain w-auto h-48 sm:h-56 md:h-60 lg:h-64 3xl:h-72 4xl:h-80' 
          />
          <Shadow1 class='absolute bottom-[10px] right-[35px] 3xl:right-[55px] 4xl:right-[75px] max-w-[160px] md:max-w-[200px] lg:max-w-full'  />
        </div> 
      </div>
    </div>
  <div class="absolute bottom-[-1rem] left-[1rem] z-[-1] w-[95%] h-7 bg-zinc-300/50 rounded-[20px]"></div>
  </div>
  <div class="absolute w-[40%] right-[-33%] xl:right-[-19%] sm:right-[-28%] lg:right-[-25%] md:right-[-33%]  scale-85 p-6 sm:p-8 md:p-10  rounded-xl md:rounded-2xl 4xl:rounded-3xl h-full bg-[radial-gradient(ellipse_at_center,_#8744D4_0%,_#6526AE_100%)] text-white">
    <div class="container flex flex-col gap-4 justify-between items-center mx-auto h-full md:flex-row md:gap-8">
      <div class="flex-1 w-full text-center md:text-start md:w-auto">
         <h2 class="text-3xl sm:text-4xl lg:text-[2.8rem] 3xl:text-[3.3rem] 4xl:text-[3.8rem] font-black m-0 leading-tight"> Earn up to </h2>
         <h2 class="text-3xl sm:text-4xl lg:text-[2.8rem] 3xl:text-[3.3rem] 4xl:text-[3.8rem] font-black m-0 leading-tight"> 2000 PKR </h2>
         <p class="mx-auto mt-3 text-base font-medium opacity-90 sm:text-lg lg:text-xl 3xl:text-2xl 4xl:text-3xl sm:mt-4 md:mx-0"> Get started in minutes! Open your bank account in just a few clicks and start earning today. Download the App now! </p>
      </div>
   </div>
  </div>
</section>

<section id="swiper-carousel-section" class='overflow-hidden w-full' style="display: none;">
  <div class='swiper feature-carousel'>
    <div class='pb-4 swiper-wrapper'> 
      {
        carouselItems.map((item) => (
          <div class='h-auto swiper-slide'>
            {item.type === 'feature' ? (
              <FeatureBanner {...(item as FeatureBannerProps)}>
               <div class="relative">
                <Image
                  src={item.imageSrc}
                  alt={item.imageAlt}
                  widths={imageWidths}
                  sizes={imageSizes}
                  loading='lazy'
                  decoding='async'
                  quality="max"
                  class='relative z-[1] object-contain w-auto h-48 sm:h-56 md:h-60 lg:h-64 3xl:h-72 4xl:h-80' 
                  />
                  {item.shadow && <item.shadow class='absolute bottom-[10px] right-[35px] 3xl:right-[55px] 4xl:right-[75px] max-w-[160px] md:max-w-[200px] lg:max-w-full'  />}
               </div>
              </FeatureBanner>
            ) : (
              <PromoBanner {...(item as PromoBannerProps)}>
             <div class="relative">
                <Image
                  src={item.imageSrc}
                  alt={item.imageAlt}
                  widths={imageWidths}
                  sizes={imageSizes}
                  loading='lazy'
                  decoding='async'
                  quality="max"
                  class='object-contain w-auto h-48 sm:h-56 md:h-60 lg:h-64 3xl:h-72 4xl:h-80' 
                />
                {item.shadow && <item.shadow class='absolute bottom-[-20px] right-[20px] 3xl:right-[40px] 4xl:right-[75px] max-w-[160px] md:max-w-[200px] lg:max-w-full' />}
             </div>
              </PromoBanner>
            )}
          </div>
        ))
      }
    </div>
  </div>
</section>

<script>
  import Swiper from 'swiper';
  import { Autoplay, EffectCoverflow } from 'swiper/modules'; 

  document.addEventListener('DOMContentLoaded', () => {
    const staticPreviewSection = document.getElementById('static-carousel-preview');
    const swiperSection = document.getElementById('swiper-carousel-section');

    const swiper = new Swiper('.feature-carousel', {
      modules: [Autoplay, EffectCoverflow],
      loop: true,
      centeredSlides: true,
      initialSlide: 1, // Explicitly set initial slide
      effect: 'coverflow',
      grabCursor: true,
      observer: true,
      observeParents: true,

      autoplay: {
        delay: 3000,
        disableOnInteraction: false,
        pauseOnMouseEnter: true,
      },

      slidesPerView: 1.1, 
      spaceBetween: 47, 
      coverflowEffect: { 
        rotate: 0,
        stretch: 10,
        depth: 100,
        modifier: 1.5,
        slideShadows: false,
      },
      breakpoints: {
        576: {
          slidesPerView: 1.25 ,
          spaceBetween: 90,
          coverflowEffect: {
            rotate: 0,
            stretch: 30,
            depth: 120,
            modifier: 1.2,
            slideShadows: false,
          },
        },
        768: {
          slidesPerView: 1.1,
          spaceBetween: 96,
          coverflowEffect: {
            rotate: 0,
            stretch: 30,
            depth: 120,
            modifier: 1.2,
            slideShadows: false,
          },
        },
        992: {
          slidesPerView: 1.3,
          spaceBetween: 130,
          coverflowEffect: {
            rotate: 0,
            stretch: 50,
            depth: 150,
            modifier: 1,
            slideShadows: false,
          },
        },
         1200: {
          slidesPerView: 1.5,
          spaceBetween: 150,
          coverflowEffect: {
            rotate: 0,
            stretch: 60,
            depth: 180,
            modifier: 1,
            slideShadows: false,
          },
        },
        1400: {
          slidesPerView: 1.5,
          spaceBetween: 160,
          coverflowEffect: {
            rotate: 0,
            stretch: 60,
            depth: 180,
            modifier: 1,
            slideShadows: false,
          },
        },
        1600: {
          slidesPerView: 1.5,
          spaceBetween: 175,
          coverflowEffect: {
            rotate: 0,
            stretch: 60,
            depth: 180,
            modifier: 1,
            slideShadows: false,
          },
        },
        1900: {
          slidesPerView: 1.5,
          spaceBetween: 190,
          coverflowEffect: {
            rotate: 0,
            stretch: 60,
            depth: 180,
            modifier: 1,
            slideShadows: false,
          },
        }
      },
      on: {
        init: function () {
          // This 'this' refers to the swiper instance
          if (staticPreviewSection && swiperSection) {
            swiperSection.style.display = 'block'; // Or 'flex' or its original display type
            staticPreviewSection.style.display = 'none';
            
            this.update(); // Update Swiper layout after it's visible
            if (this.params.loop) {
              this.slideToLoop(0, 0, false); // Go to the first "real" slide in the loop
            }
            
          } else if (swiperSection) {
            // Fallback if static section wasn't found for some reason
            swiperSection.style.display = 'block';
            this.update();
            if (this.params.loop) {
              this.slideToLoop(0, 0, false);
            }
          }
        },
      },
    });

    // Old logic for showing/hiding is removed as it's now handled by swiper's on:init event
  });
</script>

<style is:global>
.feature-carousel .swiper-slide {
  display: flex;
  justify-content: center;
  align-items: center;
  height: auto;
  width: auto;
}

.feature-carousel .swiper-slide > div { 
   width: 100%;
   height: 100%;
   min-height: 320px;
   sm:min-height: 360px;
   lg:min-height: 400px;
}
</style>
