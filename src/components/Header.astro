---
// src/components/Header.astro
import QRModalTriggerer from '@components/common/QRModalTriggerer.astro';
import CountryLanguageSelector from '@components/country-language-selector/index.astro';
import UAESelector from '@components/country-language-selector/UAESelector.astro';
import Logo from '@assets/logos/jplogo.svg';
import Link from '@components/common/Link.astro';

const {
  translations: { navbar = {} },
  country, // Get the current country from Astro.locals
} = Astro.locals;

// Check if we're on the UAE site
const isUAE = country === 'are';
---

<header
  class='flex fixed top-0 z-50 items-center justify-between px-5 lg:px-10 py-4 lg:py-8 w-full bg-white border-gray-200 transition-shadow duration-300 border-b-[1px] 2xl:px-30'
  id='main-header'
>
  <Link href='/' class=''>
    <Logo class='w-[60px] lg:w-[90px]' />
  </Link>

  <ul
    class={`flex-row items-center justify-center hidden px-4 gap-x-8 lg:flex ${isUAE ? '' : 'rounded-[7px] bg-[#EEEEEE]'}`}
  >
    <li class='py-2'>
      <Link
        href='/company'
        class='no-underline text-[#1c1c1c] text-md font-semibold transition-colors duration-300 hover:text-[#794eff]'
        >{navbar.aboutUs}</Link
      >
    </li>
    <li class='py-2'>
      <Link
        href='#benefits-section'
        class='no-underline text-[#1c1c1c] text-md font-semibold transition-colors duration-300 hover:text-[#794eff]'
        >{navbar.services}</Link
      >
    </li>
    <li class='py-2'>
      <Link
        href='/contact'
        class='no-underline text-[#1c1c1c] text-md font-semibold transition-colors duration-300 hover:text-[#794eff]'
        >{navbar.contactUs}</Link
      >
    </li>
  </ul>

  <nav class='flex items-center'>
    <div class='flex items-center gap-x-2 direction-ltr'>
      <div class='hidden lg:block'>
        <QRModalTriggerer>
          <p
            id='header-download-lg'
            class={`hidden py-2 text-xs font-medium text-white transition-colors duration-300 bg-black lg:block lg:text-base hover:bg-gray-600 rounded-xl ${isUAE ? 'px-8' : 'px-4'}`}
          >
            {navbar.downloadApp}
          </p>
        </QRModalTriggerer>
      </div>

      <button
        id='header-download-sm'
        type='button'
        onclick='console.log("Header download button clicked"); (function(e){const ua=navigator.userAgent;const isIOS=/iPhone|iPad|iPod/i.test(ua);const isAndroid=/Android/i.test(ua);console.log("OS detection:",{isIOS,isAndroid});if(isIOS){console.log("iOS detected, redirecting");window.location.href="https://apps.apple.com/pl/app/jingle-pay/id1493392189";}else if(isAndroid){console.log("Android detected, redirecting");window.location.href="https://play.google.com/store/apps/details?id=com.jinglepay&hl=en";}})(event);'
        class={`block px-4 py-2 text-xs font-medium text-white transition-colors duration-300 bg-black lg:hidden lg:text-base hover:bg-gray-600 ${isUAE ? 'rounded-full' : 'rounded-xl'}`}
        >{navbar.downloadApp}</button
      >

      {isUAE ? 
        <UAESelector className="ml-auto" /> 
      : 
        <CountryLanguageSelector className="ml-auto" />
      }

      <button id='menu-toggle' class='relative w-6 h-6 overflow-hidden cursor-pointer lg:hidden'>
        <!-- <div class='absolute top-0 left-0 w-6 h-6'></div> -->
        <div class='w-4 h-0 left-[4px] top-[6px] absolute outline-2 outline-offset-[-1px] outline-[#794EFF]'></div>
        <div class='w-4 h-0 left-[4px] top-[12px] absolute outline-2 outline-offset-[-1px] outline-[#794EFF]'></div>
        <div class='w-4 h-0 left-[4px] top-[18px] absolute outline-2 outline-offset-[-1px] outline-[#794EFF]'></div>
      </button>
    </div>

    <ul id='menu-items' class='hidden fixed inset-0 z-[100] items-center justify-center w-screen h-screen bg-white'>
      <button id='close-menu' class='cursor-pointer absolute top-6 right-6 text-2xl font-bold text-[#794eff]'>
        âœ•
      </button>
      <li class='py-4'>
        <Link
          href='/company'
          class='no-underline text-[#1c1c1c] text-xl font-semibold transition-colors duration-300 hover:text-[#794eff]'
          >{navbar.aboutUs}</Link
        >
      </li>
      <li class='py-4'>
        <Link
          href='#benefits-section'
          class='no-underline text-[#1c1c1c] text-xl font-semibold transition-colors duration-300 hover:text-[#794eff]'
          >{navbar.services}</Link
        >
      </li>
      <li class='py-4'>
        <Link
          href='/contact'
          class='no-underline text-[#1c1c1c] text-xl font-semibold transition-colors duration-300 hover:text-[#794eff]'
          >{navbar.contactUs}</Link
        >
      </li>

      {isUAE ? 
        <UAESelector className="flex lg:hidden" /> 
      : 
        <CountryLanguageSelector className="flex lg:hidden" />
      }
    </ul>
  </nav>
</header>

<script>
  import { triggerAppRedirect } from '@util/handleAppRedirect';

  // Mobile menu functionality
  const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
  const mainNav = document.querySelector('nav');

  mobileMenuToggle?.addEventListener('click', () => {
    mainNav?.classList.toggle('active');
    mobileMenuToggle.classList.toggle('active');
  });

  // Header shadow on scroll functionality
  const header = document.getElementById('main-header');
  const scrollThreshold = 50; // Adjust this value based on when you want the shadow to appear

  window.addEventListener('scroll', () => {
    if (window.scrollY > scrollThreshold) {
      header?.classList.add('shadow-md');
    } else {
      header?.classList.remove('shadow-md');
    }
  });

  // Close menu when X is clicked
  document.getElementById('close-menu')?.addEventListener('click', () => {
    const menuItems = document.getElementById('menu-items');
    menuItems?.classList.add('hidden');
    menuItems?.classList.remove('flex');
    menuItems?.classList.remove('flex-col');
    // Re-enable scrolling
    document.body.style.overflow = '';
  });

  // Toggle menu on hamburger click
  document.getElementById('menu-toggle')?.addEventListener('click', () => {
    const menuItems = document.getElementById('menu-items');
    const isMenuHidden = menuItems?.classList.contains('hidden');

    menuItems?.classList.toggle('hidden');
    menuItems?.classList.toggle('flex');
    menuItems?.classList.toggle('flex-col');

    // Toggle scrolling based on menu state
    if (isMenuHidden) {
      // Disable scrolling when menu opens
      document.body.style.overflow = 'hidden';
    } else {
      // Re-enable scrolling when menu closes
      document.body.style.overflow = '';
    }
  });

  // Close menu when menu links are clicked
  document.querySelectorAll('#menu-items a').forEach((link) => {
    link.addEventListener('click', (e) => {
      // Get the href attribute
      const href = link.getAttribute('href');

      // Close the menu
      const menuItems = document.getElementById('menu-items');
      menuItems?.classList.add('hidden');
      menuItems?.classList.remove('flex');
      menuItems?.classList.remove('flex-col');

      // Re-enable scrolling
      document.body.style.overflow = '';

      // For anchor links, prevent default behavior and do smooth scrolling
      if (href?.startsWith('#')) {
        e.preventDefault();

        // Slight delay to allow menu to close first
        setTimeout(() => {
          const targetElement = document.querySelector(href);
          if (targetElement) {
            targetElement.scrollIntoView({ behavior: 'smooth' });
          }
        }, 300);
      }
      // For other links, navigation will happen automatically
    });
  });

  // Direct inline redirect now used on header-download-sm button
  // No need for additional event listener
</script>
