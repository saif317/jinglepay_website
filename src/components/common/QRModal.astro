---
import PhoneNumberInput from '@components/common/PhoneNumberInput.astro';
import QRCodeGenerator from '@components/common/QRCodeGenerator.astro';

declare global {
  interface Window {
    openQRModal: () => void;
  }
}
---

<div id='global-qr-modal' class='fixed inset-0 z-50 items-center justify-center bg-[#00000070] hidden p-4'>
  <div
    id='modal-content'
    class='relative flex flex-col items-center justify-center w-11/12 max-w-md text-center bg-white rounded-2xl shadow-xl gap-y-3 sm:gap-y-4 p-4 sm:p-6 lg:p-8 max-h-[90vh] overflow-y-auto'
  >
    <button
      id='global-qr-modal-close'
      class='absolute cursor-pointer text-gray-500 right-1 top-1 hover:text-[#794eff] p-1 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#794eff]'
    >
      <span class='sr-only'>Close modal</span>
      <svg
        xmlns='http://www.w3.org/2000/svg'
        class='w-5 h-5 sm:w-6 sm:h-6'
        fill='none'
        viewBox='0 0 24 24'
        stroke='currentColor'
      >
        <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18L18 6M6 6l12 12'></path>
      </svg>
    </button>

    <h3 class='text-lg font-extrabold sm:text-xl'>Get the Jingle Pay App</h3>
    <span class='text-sm font-light text-gray-600 sm:text-base'>Scan the QR code to download the App</span>

    <div class='flex justify-center my-2 sm:my-3'>
      <QRCodeGenerator />
    </div>

    <span class='text-sm font-light text-gray-600 sm:text-base'>or get a download link via SMS</span>

    <PhoneNumberInput class='w-full max-w-xs mx-auto' />
  </div>
</div>

<script>
  window.openQRModal = () => {
    const modal = document.getElementById('global-qr-modal');
    if (modal) {
      modal.classList.remove('hidden');
      modal.classList.add('flex');
      document.body.style.overflow = 'hidden';
    }
  };

  function closeModal() {
    const modal = document.getElementById('global-qr-modal');
    if (modal) {
      modal.classList.add('hidden');
      modal.classList.remove('flex');
      document.body.style.overflow = '';
    }
  }

  if (!(window as any).__qrModalListenersAdded) {
    (window as any).__qrModalListenersAdded = true;

    document.addEventListener('DOMContentLoaded', () => {
      const modal = document.getElementById('global-qr-modal');
      const modalContent = document.getElementById('modal-content');
      const closeButton = document.getElementById('global-qr-modal-close');

      closeButton?.addEventListener('click', closeModal);

      modal?.addEventListener('click', (e) => {
        if (e.target === modal) {
          closeModal();
        }
      });
    });

    document.addEventListener('keydown', (e) => {
      const modal = document.getElementById('global-qr-modal');
      if (e.key === 'Escape' && modal && !modal.classList.contains('hidden')) {
        closeModal();
      }
    });
  }
</script>
