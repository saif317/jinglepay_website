---
import { Image } from 'astro:assets';
import Arrow from '@assets/icons/arrow.svg';
import type { ImageMetadata } from 'astro';

// Extend Logo interface for better image handling
export interface Logo {
  src: AstroSVGElement | ImageMetadata;
  alt: string;
  href: string;
  isSvg?: boolean; // Optional flag for SVG handling
  // Define widths/sizes for non-SVG logos
  widths?: number[];
  widthPercent?: number;
  sizes?: string;
}

interface Props {
  title: string;
  description: string;
  buttonText: string;
  buttonLink: string;
  logos: Logo[];
  selector: string;
}

const { title, description, buttonText, buttonLink, logos, selector } = Astro.props;

const defaultLogoWidths = [80, 120, 160];
const defaultLogoSizes = '(max-width: 639px) 25vw, (max-width: 1023px) 15vw, 120px'; // Example sizes, adjust!

const logosPerSlide = 6;
---

<section
  class='flex flex-col gap-y-10 w-full lg:flex-row lg:justify-between lg:items-start lg:gap-y-0 lg:gap-x-12 xl:gap-x-20'
>
  <div class='flex flex-col flex-shrink-0 items-center w-full lg:items-start lg:w-5/12'>
    <h2 class='mb-3 text-3xl font-black sm:text-4xl 4xl:text-5xl lg:mb-4'>{title}</h2>
    <p
      class='mb-6 text-base font-normal text-center lg:text-start sm:text-lg lg:text-xl 4xl:text-2xl text-neutral-500 sm:mb-8 lg:mb-10'
    >
      {description}
    </p>
    <a
      href={buttonLink}
      class='inline-block px-5 py-2.5 text-sm text-white bg-violet-500 rounded-lg transition-colors sm:px-6 sm:py-3 sm:text-base 4xl:text-xl 4xl:px-8 4xl:py-5 sm:rounded-xl hover:bg-violet-600 focus:outline-none focus:ring-2 focus:ring-violet-400 focus:ring-offset-2'
      rel='noopener noreferrer'
      target='_blank'
    >
      {buttonText}
    </a>
  </div>

  <div class='flex relative flex-col gap-y-4 items-center w-full lg:items-end lg:w-6/12 sm:gap-y-6'>
    <div class={`swiper w-full`} data-selector={selector} data-name={`${selector}-logo-swiper`}>
      <div class='swiper-wrapper'>
        {
          [...Array(Math.ceil(logos.length / logosPerSlide))].map((_, slideIndex) => (
            <div class='swiper-slide'>
              <div class='grid grid-cols-2 gap-3 sm:grid-cols-3 sm:gap-4 lg:gap-5'>
                {logos.slice(slideIndex * logosPerSlide, (slideIndex + 1) * logosPerSlide).map((logo) => (
                  <a
                    href={logo.href}
                    class='flex items-center justify-center bg-neutral-100 rounded-lg sm:rounded-xl lg:rounded-2xl aspect-video sm:aspect-square h-auto min-h-[70px] sm:min-h-[100px] lg:min-h-[110px] xl:min-h-[120px] p-3 sm:p-4 lg:p-5 transition-transform duration-200 hover:scale-105'
                    target='_blank'
                    rel='noopener noreferrer'
                    aria-label={`Visit ${logo.alt}`}
                  >
                    {logo.isSvg && typeof logo.src === 'function' ? (
                      <logo.src
                        class='object-contain w-auto h-full max-h-[60%] sm:max-h-[65%] lg:max-h-[70%]'
                        style={logo.widthPercent ? `width: ${logo.widthPercent}%` : undefined}
                      />
                    ) : (
                      <Image
                        src={logo.src}
                        alt={logo.alt}
                        widths={logo.widths || defaultLogoWidths}
                        sizes={logo.sizes || defaultLogoSizes}
                        loading='lazy'
                        decoding='async'
                        class='object-contain w-auto h-full max-h-[60%] sm:max-h-[65%] lg:max-h-[70%]'
                        style={logo.widthPercent ? `width: ${logo.widthPercent}%` : undefined}
                        quality='max'
                      />
                    )}
                  </a>
                ))}
              </div>
            </div>
          ))
        }
      </div>
    </div>
    <div class='flex flex-row gap-x-4 justify-center w-full sm:gap-x-6 lg:justify-end'>
      <button
        type='button'
        class={`flex items-center justify-center border rounded-full !w-8 !h-8 sm:!w-9 sm:!h-9 border-violet-500 text-violet-500 hover:bg-violet-50 transition-colors ${selector}-swiper-button-prev swiper-button-custom-prev`}
        aria-label='Previous slide'
      >
        <Arrow class='w-3 h-3 rotate-180 sm:w-4 sm:h-4' />
      </button>
      <button
        type='button'
        class={`flex items-center justify-center border rounded-full !w-8 !h-8 sm:!w-9 sm:!h-9 border-violet-500 text-violet-500 hover:bg-violet-50 transition-colors ${selector}-swiper-button-next swiper-button-custom-next`}
        aria-label='Next slide'
      >
        <Arrow class='w-3 h-3 sm:w-4 sm:h-4' />
      </button>
    </div>
  </div>
</section>

<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css' />

<script>
  import Swiper from 'swiper';
  import { Navigation } from 'swiper/modules';

  document.addEventListener('DOMContentLoaded', () => {
    const swiperContainers = document.querySelectorAll('[data-name*="-logo-swiper"]');

    console.log(swiperContainers);

    swiperContainers.forEach((container) => {
      const selector = container.getAttribute('data-selector');
      if (!selector || container.classList.contains('swiper-initialized')) return;

      new Swiper(container as HTMLElement, {
        modules: [Navigation],
        slidesPerView: 1,
        spaceBetween: 30,
        watchOverflow: true,
        navigation: {
          prevEl: `.${selector}-swiper-button-prev`,
          nextEl: `.${selector}-swiper-button-next`,
        },
        on: {
          init: function () {
            // Add listener to update container height after images load potentially
            // This might be needed if image loading causes height changes affecting layout
            // Example: window.dispatchEvent(new Event('resize'));
          },
        },
      });
    });
  });
</script>

<style is:global>
  /* Ensure swiper container takes full width */
  .swiper {
    width: 100%;
    overflow: hidden; /* Hide overflow */
  }

  .swiper-slide {
    width: 100%; /* Ensure slides take full container width */
    height: auto; /* Allow slide height to adjust based on content */
  }

  /* Hide default Swiper nav arrow pseudo-elements */
  .swiper-button-custom-prev::after,
  .swiper-button-custom-next::after {
    content: none;
  }

  /* You might need to target the custom button classes if default .swiper-button-prev/next interfere */
  .swiper-button-disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none; /* Make sure disabled buttons aren't clickable */
  }
</style>
